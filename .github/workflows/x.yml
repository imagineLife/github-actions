name: Complex-CI
defaults:
  run:
    working-directory: fe-build
# WHEN
# For MR on dev
# PLUS conditional steps on Merge-to-Dev
on:
  # pull_request:
  #   branches: [develop]
  push:
    branches: [wf-on-pr]

# WHAT
jobs:

  frontend-lint:
    runs-on: ubuntu-latest
    steps:
      # checkout the code
      - uses: actions/checkout@v2
      
      # THIS one is optional but better to be explicit
      - name: Specify Node Version
        uses: actions/setup-node@v1
        with:
          node-version: "16.14"

      
      # cache BEFORE npm i to leverage cache
      # DOCS: 
      #   https://github.com/actions/cache
      # TODO: update to v2 
      - name: cache node-mods
        uses: actions/cache@v1
        with:
          # OS-dependent + package-manager dependent path val
          # NPM Cache docs:
          #   https://docs.npmjs.com/cli/v7/configuring-npm/folders#cache
          path: ~/.npm
          # key docs: https://github.com/actions/cache#creating-a-cache-key
          #   os type
          #   hashing package-lock file for changes
          key: ${{runner.os}}-node-mods-key-${{ hashFiles('**/package-lock.json') }}
          # restore-keys docs: https://github.com/actions/cache#inputs
          # same value as previous key
          # first time it runs the cache, github wont find anything for the cache
          # prefix-only - the hash will be different each cache
          # must be regex matching or something
          restore-keys:  | 
            ${{runner.os}}-node-mods-key-
          # ONCE workflow is done, github caches the hashed package-lock with the key :) 
          #   a post cache step gets added to the workflow by this action lib
      
      # install mods 
      - run: npm i

      # lint check
      - run: npm run format:check
  
  frontend-test:
    runs-on: ubuntu-latest
    steps:
      # checkout the code
      - uses: actions/checkout@v2
      
      # THIS one is optional but better to be explicit
      - name: Specify Node Version
        uses: actions/setup-node@v1
        with:
          node-version: "16.14"
      
      # install mods 
      - run: npm i

      # test 
      - run: npm run test -- --coverage
        # env for create-react-app test interpretation
        env:
          CI: true

      # upload test coverage artifacts docs: https://github.com/actions/upload-artifact
      - name: Upload Test Coverage Artifact 
        uses: actions/upload-artifact@v1
        with:
          name: code-coverage
          path: fe-build/coverage


      # 
      # Restrict below steps when merging to develop
      # 
      - name: Build Frontend Assets
        if: github.event_name == 'push'
        run: npm run build
      
      # upload frontend build artifacts docs: https://github.com/actions/upload-artifact
      - name: Upload Frontend Static Assets 
        uses: actions/upload-artifact@v1
        with:
          name: build
          path: build

      - name: Install Surge and Deploy To Staging
        if: github.event_name =='push'
        # tell surge to use the "build" dir
        # NOTE: surge env vars are ing github repo secrets
        run: npx surge --project ./build --domain ${{secrets.SURGE_DOMAIN}}
        env: 
          SURGE_LOGIN: ${{secrets.SURGE_LOGIN}}
          SURGE_TOKEN: ${{secrets.SURGE_TOKEN}}
      